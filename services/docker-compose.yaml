version: "3"

services:
  # redis area
  # rate limit redis for gateway
  ratelimit:
    image: redis:alpine
    container_name: onepiece-gateway-redis
    environment:
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    labels:
      kompose.service.type: nodeport
    ports:
      - "6379:6379"

  # article server redis
  redisarticle:
    image: redis:alpine
    container_name: onepiece-article-redis
    environment:
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    labels:
      kompose.service.type: nodeport
    ports:
      - "6380:6379"

  # trip server redis
  redistrip:
    image: redis:alpine
    container_name: onepiece-trip-redis
    environment:
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    labels:
      kompose.service.type: nodeport
    ports:
      - "6381:6379"
  
  # user server redis
  redisuser:
    image: redis:alpine
    container_name: onepiece-user-redis
    environment:
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    labels:
      kompose.service.type: nodeport
    ports:
      - "6382:6379"

  # location server redis
  redislocation:
    image: redis:alpine
    container_name: onepiece-location-redis
    environment:
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    labels:
      kompose.service.type: nodeport
    ports:
      - "6383:6379"

  # chat server redis
  redischat:
    image: redis:alpine
    container_name: onepiece-chat-redis
    environment:
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    labels:
      kompose.service.type: nodeport
    ports:
      - "6384:6379"

  # Relation DB Area
  # trip server db
  dbtrip:
    image: kartoza/postgis:13.0
    container_name: onepiece-trip-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: onepiece
    ports:
      - 5433:5432
    volumes:
      - trip_data:/var/lib/postgresql/data

  # user server db
  dbuser:
    image: postgres:latest
    container_name: onepiece-user-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: onepiece
    ports:
      - 5434:5432
    volumes:
      - user_data:/var/lib/postgresql/data

  # location server db
  dblocation:
    image: kartoza/postgis:13.0
    container_name: onepiece-location-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: onepiece
    ports:
      - 5435:5432
    volumes:
      - location_data:/var/lib/postgresql/data

  # article_data server db
  dbarticle:
    image: postgres:latest
    container_name: onepiece-article-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: onepiece
    ports:
      - 5436:5432
    volumes:
      - article_data:/var/lib/postgresql/data

  # chat server db
  dbchat:
    image: postgres:latest
    container_name: onepiece-chat-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: onepiece
    ports:
      - 5437:5432
    volumes:
      - chat_data:/var/lib/postgresql/data

  # event store db
  dbeventstore:
    image: postgres:latest
    container_name: onepiece-event-store-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: onepiece
    ports:
      - 1113:5432
    volumes:
      - db_event_store:/var/lib/postgresql/data

  # pgAdmin
  pgadmin:
    image: dpage/pgadmin4
    links:
      - dblocation
    depends_on:
      - dblocation
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: 123
      POSTGRES_MULTIPLE_EXTENSIONS: postgis,hstore,postgis_topology,postgis_raster,pgrouting
    volumes:
      - pgadmin:/root/.pgadmin
      - pgadmin:/var/lib/pgadmin
    ports:
      - "16543:80"

  # RMQ Communication Area
  # rabbitmq area for serveral services communication will migrate all to use kafka later on if we have budget
  rabbitmq:
    image: "rabbitmq:3-management"
    hostname: "rabbitmq"
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - "15672:15672"
      - "5672:5672"

  # KAFKA Communication Area
  # kafka area for serveral services communication will migrate all to confluent if we have budget
  # zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: onepiece-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2
  # kafka
  kafka:
    image: confluentinc/cp-kafka
    container_name: onepiece-kafka
    ports:
      - 9094:9094
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://kafka:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CREATE_TOPICS: onepiece-topic-chat,onepiece-topic-chat-event,onepiece-gateway-event,onepiece-user-event
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  

  # Service Area
  # gateway server
  gateway:
    build: ../one-piece-gateway
    container_name: onepiece-gateway
    command: sh -c "dockerize -wait tcp://zookeeper:2181 -wait tcp://kafka:9092 -wait tcp://ratelimit:6379 npm run start:prod"
    depends_on:
      - ratelimit
    environment:
      APPHOST: localhost
      APPPORT: 8080
      USERSERVER: ${USERSERVER}
      USERSERVERHOST: ${USERSERVERHOST}
      USERSERVERPORT: ${USERSERVERPORT}
      TRIPSERVER: ${TRIPSERVER}
      TRIPSERVERHOST: ${TRIPSERVERHOST}
      TRIPSERVERPORT: ${TRIPSERVERPORT}
      ARTICLEERVER: ${ARTICLESERVER}
      ARTICLEERVERHOST: ${ARTICLESERVERHOST}
      ARTICLEERVERPORT: ${ARTICLESERVERPORT}
      LOCATIONERVER: ${LOCATIONSERVER}
      LOCATIONERVERHOST: ${LOCATIONSERVERHOST}
      LOCATIONERVERPORT: ${LOCATIONSERVERPORT}
      REDISRATELIMITURL: tcp://ratelimit:6379
    ports:
      - 8080:8080
      - 84:84

  # user server
  service-user:
    build: ../one-piece-user
    container_name: onepiece-user-server
    command: sh -c "dockerize -wait tcp://rabbitmq:5672 -wait tcp://redisuser:6379 -wait tcp://dbuser:5432 npm run start:prod"
    depends_on:
      - redisuser
      - dbuser
    environment:
      APPHOST: localhost
      APPPORT: 7071
      DBHOST: dbuser
      DBPORT: 5432
      DBUSERNAME: postgres
      DBPASSWORD: 123
      DBDATABASE: onepiece
      DBSCHEMA: public
      DBRATETABLE: user
      REDIS_URL: tcp://redisuser:6379
      JWTKEY: ${JWTKEY}
      JWTSECRET: ${JWTSECRET}
      CLOUDINARY_APINAME: ${CLOUDINARY_APINAME}
      CLOUDINARY_APIKEY: ${CLOUDINARY_APIKEY}
      CLOUDINARY_APISECRET: ${CLOUDINARY_APISECRET}
      CLOUDINARY_APIURL: ${CLOUDINARY_APIURL}
      EVENTSTOREPROTOCOL: ${EVENTSTOREPROTOCOL}
      EVENTSTOREHOSTNAME: ${EVENTSTOREHOSTNAME}
      EVENTSTORETCPPORT: ${EVENTSTORETCPPORT}
      GOOGLEAUTHID: ${GOOGLEAUTHID}
      GOOGLEAUTHSECRET: ${GOOGLEAUTHSECRET}
      GOOGLEAUTHCALLBACKURL: ${GOOGLEAUTHCALLBACKURL}
      GOOGLEMAILSUER: ${GOOGLEMAILSUER}
      GOOGLEMAILPASS: ${GOOGLEMAILPASS}
      FBAUTHID: ${FBAUTHID}
      FBAUTHSECRET: ${FBAUTHSECRET}
      FBAUTHCALLBACKURL: ${FBAUTHCALLBACKURL}
    ports:
      - 7071:7071

  # trip server
  service-trip:
    build: ../one-piece-trip
    container_name: onepiece-trip-server
    command: sh -c "dockerize -wait tcp://rabbitmq:5672 -wait tcp://redistrip:6379 -wait tcp://dbtrip:5432 npm run start:prod"
    depends_on:
      - redistrip
      - dbtrip
    environment:
      APPHOST: localhost
      APPPORT: 7072
      DBHOST: dbtrip
      DBPORT: 5432
      DBUSERNAME: postgres
      DBPASSWORD: 123
      DBDATABASE: onepiece
      DBSCHEMA: public
      DBRATETABLE: trip
      REDIS_URL: tcp://redistrip:6379
      JWTKEY: ${JWTKEY}
      JWTSECRET: ${JWTSECRET}
      CLOUDINARY_APINAME: ${CLOUDINARY_APINAME}
      CLOUDINARY_APIKEY: ${CLOUDINARY_APIKEY}
      CLOUDINARY_APISECRET: ${CLOUDINARY_APISECRET}
      CLOUDINARY_APIURL: ${CLOUDINARY_APIURL}
      EVENTSTOREPROTOCOL: ${EVENTSTOREPROTOCOL}
      EVENTSTOREHOSTNAME: ${EVENTSTOREHOSTNAME}
      EVENTSTORETCPPORT: ${EVENTSTORETCPPORT}
      LOCATIONSERVER: ${LOCATIONSERVER}
      LOCATIONSERVERHOST: ${LOCATIONSERVERHOST}
      LOCATIONSERVERPORT: ${LOCATIONSERVERPORT}
    ports:
      - 7072:7072

  # location service
  service-location:
    build: ../one-piece-location
    container_name: onepiece-location-server
    command: sh -c "dockerize -wait tcp://rabbitmq:5672 -wait tcp://redislocation:6379 -wait tcp://dblocation:5432 npm run start:prod"
    depends_on:
      - redislocation
      - dblocation
    environment:
      APPHOST: localhost
      APPPORT: 7074
      DBHOST: dblocation
      DBPORT: 5432
      DBUSERNAME: postgres
      DBPASSWORD: 123
      DBDATABASE: onepiece
      DBSCHEMA: public
      DBRATETABLE: location
      REDIS_URL: tcp://redislocation:6379
      JWTKEY: ${JWTKEY}
      JWTSECRET: ${JWTSECRET}
      EVENTSTOREPROTOCOL: ${EVENTSTOREPROTOCOL}
      EVENTSTOREHOSTNAME: ${EVENTSTOREHOSTNAME}
      EVENTSTORETCPPORT: ${EVENTSTORETCPPORT}
    ports:
      - 7074:7074

  # chat service
  service-chat:
    build: ../one-piece-chat
    container_name: onepiece-chat-server
    command: sh -c "dockerize -wait tcp://rabbitmq:5672 -wait tcp://redischat:6379 -wait tcp://dbchat:5432 npm run start:prod"
    depends_on:
      - redischat
      - dbchat
    environment:
      APPHOST: localhost
      APPPORT: 7075
      DBHOST: dbchat
      DBPORT: 5432
      DBUSERNAME: postgres
      DBPASSWORD: 123
      DBDATABASE: onepiece
      DBSCHEMA: public
      DBRATETABLE: chat
      REDIS_URL: tcp://redischat:6379
      JWTKEY: ${JWTKEY}
      JWTSECRET: ${JWTSECRET}
      EVENTSTOREPROTOCOL: ${EVENTSTOREPROTOCOL}
      EVENTSTOREHOSTNAME: ${EVENTSTOREHOSTNAME}
      EVENTSTORETCPPORT: ${EVENTSTORETCPPORT}
    ports:
      - 7075:7075

volumes:
  article_data:
  user_data:
  trip_data:
  location_data:
  chat_data:
  db_event_store:
  pgadmin:
    driver: local